/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import helpers.BuildChatMessageBox;
import helpers.ChatLinkListener;
import main.ManageAllFrame;
import main.SavePreference;
import models.LoginUser;
import models.MessageChat;
import models.User;
import models.packet.PacketGetListOnlineUser;
import models.packet.PacketGetMess;
import sockets.SocketUtil;

import javax.security.sasl.SaslClient;
import javax.swing.*;
import javax.swing.event.ListDataEvent;
import javax.swing.event.ListDataListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.text.AttributeSet;
import javax.swing.text.Element;
import javax.swing.text.StyledDocument;
import java.awt.event.*;
import java.io.*;
import java.net.Socket;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.*;

import static main.SavePreference.getInstance;

/**
 *
 * @author nghia
 */
public class ChatView extends javax.swing.JFrame {

    /**
     * Creates new form ChatView
     */
    public ChatView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        jlblSendPerson = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListOnliner = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtpnShowChatBox = new javax.swing.JTextPane();
        jtxtMessageBox = new javax.swing.JTextField();
        jbtnSend = new javax.swing.JButton();
        Icon iconE = new ImageIcon("icons8-crazy-24.png");
        Icon iconD = new ImageIcon("icons8-file-24.png");
        jbtnDocument = new javax.swing.JButton(iconD);
        jbtnEmoji = new javax.swing.JButton(iconE);
        jbtnMoreChatBox = new javax.swing.JButton();
        jlblToPerson = new javax.swing.JLabel();

        jlblSendPerson.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jlblSendPerson.setText(SavePreference.getInstance().getUser());

        jListOnliner.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                // Render user and sendUser;
                System.out.println("1: " + toUser);;
                toUser = (jListOnliner.getSelectedValue() != null)?(String) jListOnliner.getSelectedValue(): toUser;
                jlblToPerson.setText("To: " + toUser);

                if(toUser != null && SavePreference.getInstance().getUser() != null){
                    new SocketUtil(SavePreference.getInstance().getSocket()).getMess(SavePreference.getInstance().getUser(), toUser);
                }
                System.out.println(SavePreference.getInstance().getUser() + " " + toUser);
            }
        });
        jScrollPane1.setViewportView(jListOnliner);

        jScrollPane2.setViewportView(jtpnShowChatBox);
        final StyledDocument doc = jtpnShowChatBox.getStyledDocument();
        jtpnShowChatBox.setEditable(false);
        jtpnShowChatBox.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                Element ele = doc.getCharacterElement(jtpnShowChatBox.viewToModel(e.getPoint()));
                AttributeSet as = ele.getAttributes();
                ChatLinkListener fla = (ChatLinkListener)as.getAttribute("linkact");
                if(fla != null)
                {
                    fla.execute();
                }
            }
        });

        jtxtMessageBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtMessageBoxActionPerformed(evt);
            }
        });

        jbtnSend.setText("Gửi");
        jbtnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSendActionPerformed(evt);
            }
        });

        //jbtnDocument.setText("document");
        jbtnDocument.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDocumentActionPerformed(evt);
            }
        });

        //jbtnEmoji.setText("Emoji");
        jbtnEmoji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEmojiActionPerformed(evt);
            }
        });

        jbtnMoreChatBox.setText("Chat với người khác");
        jbtnMoreChatBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnMoreChatBoxActionPerformed(evt);
            }
        });

        jlblToPerson.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlblToPerson.setText("To: ");


        LoginUser a = LoginUser.getInstance();
        a.setUsername("admin");

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                super.windowClosed(e);
                ManageAllFrame.getInstance().closeAll();
            }
        });

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jlblToPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jbtnMoreChatBox))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 664, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                .addComponent(jbtnDocument, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jbtnEmoji, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jtxtMessageBox)
                                                                .addGap(27, 27, 27)
                                                                .addComponent(jbtnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(jlblSendPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, Short.MAX_VALUE)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jlblSendPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jlblToPerson)
                                        .addComponent(jbtnMoreChatBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(jtxtMessageBox)
                                                                .addComponent(jbtnDocument)
                                                                .addComponent(jbtnEmoji))
                                                        .addComponent(jbtnSend, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(13, 13, 13))
        );

        //updateUI(false, true);
        new SocketUtil(getInstance().getSocket()).getList();
        setTitle("Tin nhắn");
        pack();
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    }// </editor-fold>

    private void jtxtMessageBoxActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        jbtnSend.doClick();
    }

    private void jbtnSendActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if(toUser != null && getInstance().getUser() != null && jtxtMessageBox.getText().length() > 0){
            System.out.println(getInstance().getUser());
            new SocketUtil(getInstance()
                    .getSocket()).sendMess(getInstance().getUser(), toUser, jtxtMessageBox.getText());
        }
        jtxtMessageBox.setText("");
    }

    private void jbtnEmojiActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void jbtnDocumentActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showDialog(this, "OK");

        File file = fileChooser.getSelectedFile();
        if(file != null && file.isFile()){
            if(toUser == null || SavePreference.getInstance().getUser() == null){
                JOptionPane.showMessageDialog(this, "Bạn cần chọn người gửi.");
            } else {
                new SocketUtil(SavePreference.getInstance().getSocket()).sendFile(
                        SavePreference.getInstance().getUser(),
                        toUser,
                        file
                );
            }

        }
    }

    private void jbtnMoreChatBoxActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(
                            "javax.swing.plaf.metal.MetalLookAndFeel");
                    //  "com.sun.java.swing.plaf.motif.MotifLookAndFeel");
                    //UIManager.getCrossPlatformLookAndFeelClassName());
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
                ChatView chat = new ChatView();
                ManageAllFrame.getInstance().addList(chat);
                new SocketUtil(getInstance().getSocket()).getList();
                chat.showUI();
//                new ChatView().setVisible(true);
            }
        });
    }

    public void updateListOnline(List<String> data){
        jListOnliner.setListData(data.toArray());
        System.out.println(hashCode());
    }

    public void updateBoxChat(String user, List<MessageChat> messages){
        if(user.equals(toUser)){
            jtpnShowChatBox.setText("");
            BuildChatMessageBox.getFormMess(messages, jtpnShowChatBox);
        }
    }


    // Variables declaration - do not modify
    private javax.swing.JList jListOnliner;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbtnDocument;
    private javax.swing.JButton jbtnEmoji;
    private javax.swing.JButton jbtnMoreChatBox;
    private javax.swing.JButton jbtnSend;
    private javax.swing.JLabel jlblSendPerson;
    private javax.swing.JLabel jlblToPerson;
    private javax.swing.JTextPane jtpnShowChatBox;
    private javax.swing.JTextField jtxtMessageBox;

    private String toUser = "Null";
    // End of variables declaration

    public void showUI() {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(
                            "javax.swing.plaf.metal.MetalLookAndFeel");
                    //  "com.sun.java.swing.plaf.motif.MotifLookAndFeel");
                    //UIManager.getCrossPlatformLookAndFeelClassName());
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
                setVisible(true);
            }
        });
    }

    public static void main(String[] args) {
        new ChatView().showUI();
    }
}
